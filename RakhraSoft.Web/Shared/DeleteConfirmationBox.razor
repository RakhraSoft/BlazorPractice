<!-- Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Modal title</h5>
                <button type="button" class="close" @onclick="async () => await OnResponse.InvokeAsync(false)" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete?
            </div>
            <div class="modal-footer">
                @if (IsProcessingDelete)
                    {
                    <button type="button" class="btn btn-secondary" disabled data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-danger" disabled>Processing...</button>
                    }
                    else
                    {
                    <button type="button" class="btn btn-secondary" @onclick="async () => await OnResponse.InvokeAsync(false)" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-danger" @onclick="async () => await OnResponse.InvokeAsync(true)">Confirm Delete</button>
                    }

            </div>
        </div>
    </div>
</div>
@code {
        [Parameter]
        public EventCallback<bool> OnResponse { get; set; }

        [Parameter]
        public bool IsProcessingDelete { get; set; }
    }
