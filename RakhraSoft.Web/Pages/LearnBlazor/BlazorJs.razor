@page "/learn/blazorjs"
@inject IJSRuntime jsRuntime

<h3>Blazor Js</h3>
<div class="container">
    <div class="row">
        <div class="col-md-4">
            <button class="btn btn-secondary" style="width: 200px;" @onclick="TestConfirmBox">Test Confirm
                Button</button>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4 m-2">
            <button class="btn btn-success" style="width: 200px;" @onclick="TestFailure">Test Failure</button>
        </div>
        <div class="col-md-4 m-2">
            <button class="btn btn-danger" style="width: 200px;" @onclick="TestSuccess">Test Success</button>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4 m-2">
            <button class="btn btn-success" style="width: 200px;" @onclick="SweetAlertSuccess">Sweet Alert
                Success</button>
        </div>
        <div class="col-md-4 m-2">
            <button class="btn btn-danger" style="width: 200px;" @onclick="SweetAlertFailure">Sweet Alert
                Failure</button>
        </div>
    </div>
    <div class="row">

        @if (ConfirmResult)
        {
            <p>Confirmation has been made!</p>
        }
        else
        {
            <p>Confirmtion Pending!</p>
        }
    </div>
</div>

@code {

    public string ConfirmMessage { get; set; } = "Are you sure you want to click?";
    public bool ConfirmResult { get; set; }
    private async Task TestConfirmBox()
    {
        ConfirmResult = await jsRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }

    private async Task SweetAlertSuccess()
    {
        await jsRuntime.SweetAlertSuccess("This is successful");
    }

    private async Task SweetAlertFailure()
    {
        await jsRuntime.FailureAlertFailure("This is failure");
    }

    private async Task TestSuccess()
    {
        await jsRuntime.ToastrSuccess("This is successful");
    }

    private async Task TestFailure()
    {
        await jsRuntime.ToastrFailure("This is failure");
    }
}